trigger:
  tags:
    include:
    - "*"

pr:
- master

name: $(Build.BuildId)

jobs:
  #=============================================================================
  - job: Windows
    pool:
      vmImage: 'windows-latest'

    steps:
    - bash: |
        TAG=$(git describe --abbrev=0)
        echo "##vso[task.setvariable variable=version_tag;]$TAG"
      name: setVersionTag

    - task: PowerShell@2
      displayName: "Task 1: Download Latest JUCE Release"
      inputs:
        targetType: 'inline'
        script: |
          $json = curl https://api.github.com/repos/juce-framework/JUCE/releases/latest | ConvertFrom-Json
          
          ForEach ($asset in $json.assets) {
              if ($asset.name -Match "-windows.zip") {
                  Write-Host "Invoking Web-Request: $asset.browser_download_url"
                  Invoke-WebRequest -Uri $asset.browser_download_url -OutFile "$(Pipeline.Workspace)\JUCE.zip"

                  Write-Host "Expanding Archive..."
                  Expand-Archive "$(Pipeline.Workspace)\JUCE.zip" -DestinationPath "$(Pipeline.Workspace)"
              }
          }

    - task: CmdLine@2
      displayName: "Task 2: Build"
      inputs:
        script: |
          cmake -Bbuild -DJUCE_PATH="$(Pipeline.Workspace)/JUCE/"
          cmake --build build --config Release

    - task: CmdLine@2
      displayName: "Task 3: Move Binaries"
      inputs:
        script: |
          mkdir $(Build.ArtifactStagingDirectory)\Contrast_$(version_tag)_Windows

          for /r %%f in (*.vst3) do (
            echo "Moving file %%f..."
            move %%f "$(Build.ArtifactStagingDirectory)\Contrast_$(version_tag)_Windows"
          )

    - task: PowerShell@2
      displayName: "Task 4: Compress Binaries"
      inputs:
        targetType: 'inline'
        script: Compress-Archive -Path $(Build.ArtifactStagingDirectory)\* -DestinationPath $(Build.ArtifactStagingDirectory)\Contrast_$(version_tag)_Windows.zip

    - task: GitHubRelease@1
      displayName: "Task 5: Upload to GitHub"
      inputs:
        gitHubConnection: 'GitHub PAT'
        repositoryName: '$(Build.Repository.Name)'
        action: 'edit'
        target: '$(Build.SourceVersion)'
        tag: '$(version_tag).$(Build.BuildNumber)'
        assets: '$(Build.ArtifactStagingDirectory)\*.zip'
        assetUploadMode: 'replace'
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'commitBased'

  #=============================================================================
  - job: MacOS
    pool:
      vmImage: 'macOS-latest'

    steps:
    - bash: |
        TAG=$(git describe --abbrev=0)
        echo "##vso[task.setvariable variable=version_tag;]$TAG"
      name: setVersionTag

    - task: PowerShell@2
      displayName: "Task 1: Download Latest JUCE Release"
      inputs:
        targetType: 'inline'
        script: |
          $headers = @{
            Authorization="token $(GitHubPAT)"
          }
          $json = Invoke-RestMethod -Uri https://api.github.com/repos/juce-framework/JUCE/releases/latest -Headers $headers
          
          ForEach ($asset in $json.assets) {
              if ($asset.name -Match "-osx.zip") {
                  Invoke-WebRequest -Uri $asset.browser_download_url -OutFile "$(Pipeline.Workspace)/JUCE.zip"
                  Expand-Archive "$(Pipeline.Workspace)/JUCE.zip" -DestinationPath "$(Pipeline.Workspace)"
              }
          }
        failOnStderr: true

    - task: CmdLine@2
      displayName: "Task 2: Build"
      inputs:
        script: |
          cmake -Bbuild -GXcode -DJUCE_PATH="$(Pipeline.Workspace)/JUCE/"
          cmake --build build --config Release

          mkdir $(Build.ArtifactStagingDirectory)/Contrast_$(version_tag)_MacOS

          for plugin_path in `find . -name "*.vst3" -o -name "*.component"` ; do
            mv ${plugin_path} $(Build.ArtifactStagingDirectory)/Contrast_$(version_tag)_MacOS
          done

    - task: PowerShell@2
      displayName: "Task 3: Compress Binaries"
      inputs:
        targetType: 'inline'
        script: Compress-Archive -Path $(Build.ArtifactStagingDirectory)/* -DestinationPath $(Build.ArtifactStagingDirectory)\Contrast_$(version_tag)_MacOS.zip

    - task: GitHubRelease@1
      displayName: "Task 4: Upload to GitHub"
      inputs:
        gitHubConnection: 'GitHub PAT'
        repositoryName: '$(Build.Repository.Name)'
        action: 'edit'
        target: '$(Build.SourceVersion)'
        tag: '$(version_tag).$(Build.BuildNumber)'
        assets: '$(Build.ArtifactStagingDirectory)/*.zip'
        assetUploadMode: 'replace'
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'commitBased'
