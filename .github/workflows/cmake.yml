name: CMake

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}\build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DDUMP_VERSION=ON

    - name: Build
      run: cmake --build ${{ github.workspace }}\build --config ${{ env.BUILD_TYPE }}
      
    - name: Configure Environment
      shell: pwsh
      run: |
        $VER = type VERSION.txt
        echo $VER
        echo "VERSION=$VER" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

        $VER_FULL = $VER + ".${{ github.run_id }}"
        echo $VER_FULL
        echo "VERSION_FULL=$VER_FULL" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

        echo "PRERELEASE=${{ github.event_name == 'pull_request' }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      
    - name: Stage Artefacts
      shell: pwsh
      run: |
          $STAGING_DIR = "${{ github.workspace }}\staging\Contrast_${{ env.VERSION }}_Windows"
          New-Item $STAGING_DIR -ItemType Directory
          
          Get-ChildItem -Path ${{ github.workspace }}\build -Recurse -Include "*.vst3" {
              Move-Item -Path $_.FullName -Destination $STAGING_DIR
          }
          
          $OUTPUT = "${{ github.workspace }}\Contrast_${{ env.VERSION }}_Windows.zip"
          Compress-Archive -Path ${{ github.workspace }}\staging\* -DestinationPath $OUTPUT
          
          echo "ARTEFACT_PATH=$OUTPUT" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Publish
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: ${{ env.VERSION_FULL }}
        files: ${{ env.ARTEFACT_PATH }}
        prerelease: ${{ env.PRERELEASE }}

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'
        
    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -GXcode -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DDUMP_VERSION=ON
      
    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}
      
    - name: Configure Environment
      shell: pwsh
      run: |
        $VER = type VERSION.txt
        echo $VER
        echo "VERSION=$VER" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

        $VER_FULL = $VER + ".${{ github.run_id }}"
        echo $VER_FULL
        echo "VERSION_FULL=$VER_FULL" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

        echo "PRERELEASE=${{ github.event_name == 'pull_request' }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Stage Artefacts
      shell: pwsh
      run: |
          $STAGING_DIR = "${{ github.workspace }}/staging/Contrast_${{ env.VERSION }}_macOS"
          New-Item $STAGING_DIR -ItemType Directory

          Get-ChildItem -Path ${{ github.workspace }}/build -Recurse -Include "*.vst3", "*.component" {
              Move-Item -Path $_.FullName -Destination $STAGING_DIR
          }
          
          $OUTPUT = "${{ github.workspace }}/Contrast_${{ env.VERSION }}_macOS.zip"
          Compress-Archive -Path ${{ github.workspace }}/staging/* -DestinationPath $OUTPUT
          
          echo "ARTEFACT_PATH=$OUTPUT" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Publish
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: ${{ env.VERSION_FULL }}
        files: ${{ env.ARTEFACT_PATH }}
        prerelease: ${{ env.PRERELEASE }}
